{"version":3,"sources":["components/weather.js","components/form.js","App.js","index.js"],"names":["minmaxTemp","min","max","className","Weather","props","city","weathericon","celsius","description","temp_min","temp_max","wind_speed","humidity","Form","onSubmit","showWeather","type","placeholder","name","autoComplete","App","getWeather","e","a","preventDefault","country","target","elements","value","fetch","api_call","json","response","console","log","setState","sys","calCelsius","main","temp","weather","wind","speed","Humidity","get_WeatherIcon","weatherIcon","id","state","undefined","icon","error","back","Thunderstorm","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","icons","rangeId","this","Math","floor","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f2dbbd57.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\n\r\nconst Weather = (props) => {\r\n    return(\r\n\r\n\r\n        \r\n        \r\n        <div className=\"container\">\r\n        <div className=\"row justify-content-center\">\r\n        <div className=\"col-md-8 \">\r\n            <div className=\"weather_card\">\r\n            <h1 className=\"weather_title\">{props.city}</h1>\r\n            <div className=\"weather_degrees\">\r\n            <i className={`wi ${props.weathericon} display-1`}></i>\r\n         <h1>{props.celsius}&deg;</h1>\r\n\r\n                \r\n            </div>\r\n            <div className=\"weather_type\">\r\n                <h3>{props.description}</h3>\r\n            </div>\r\n            {minmaxTemp(props.temp_min, props.temp_max)}\r\n                   <div className=\"speed central\"><span>wind speed:</span><span>{props.wind_speed}</span></div>\r\n\r\n  <div className=\"humidity central\"><span>humidity:</span><span>{props.humidity}</span></div>\r\n          \r\n            </div>\r\n            </div>\r\n        </div>   \r\n        </div>   \r\n    )\r\n}\r\n\r\n\r\nfunction minmaxTemp(min,max){\r\n    if (max && min) {\r\n    return(\r\n        <div className=\"minMax\">\r\n            <span>min temp:{min}&deg;</span>\r\n            <span>max tem:{max}&deg;</span>\r\n        </div>\r\n    )\r\n    }\r\n}\r\n\r\nexport default Weather","import React from \"react\";\r\n\r\nconst Form = props => {\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={props.showWeather}>\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-md-4\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"City\"\r\n              name=\"city\"\r\n              autoComplete=\"off\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Country\"\r\n              name=\"country\"\r\n              autoComplete=\"off\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-12 mt-md-0 mt-2 text-md-left \">\r\n            <button className=\"btn primary_btn\">Get Weather</button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default Form;","\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.scss';\nimport 'weather-icons/css/weather-icons.css';\nimport Weather from './components/weather';\nimport Form from './components/form';\nimport React from 'react';\n\nconst API_key =\"d333537ab0f366f3c924c6d013e1b0bb\";\n\n\nclass App extends React.Component{\n  constructor(){\n    super();\n    this.state= {\n      city:undefined,\n      country: undefined,\n      icon:undefined,\n      main:undefined,\n      celsius:undefined,\n      temp_max:undefined,\n      temp_min:undefined,\n      description:\"\",\n      error:false,\n      wind_speed:undefined,\n      humidity:undefined,\n      back:\"default\"\n    };\n    // this.getWeather();\n\n\n    this.weatherIcon ={\n      Thunderstorm: \"wi-thunderstorm\",\n      Drizzle: \"wi-sleet\",\n      Rain: \"wi-storm-showers\",\n      Snow: \"wi-snow\",\n      Atmosphere: \"wi-fog\",\n      Clear: \"wi-day-sunny\",\n      Clouds: \"wi-day-fog\",\n    };\n  }\n\n\n  get_WeatherIcon(icons, rangeId) {\n    switch (true) {\n      case rangeId >= 200 && rangeId < 232:\n        this.setState({ icon: icons.Thunderstorm });\n        this.setState({back : \"Thunderstorm\"});\n        break;\n      case rangeId >= 300 && rangeId <= 321:\n        this.setState({ icon: icons.Drizzle });\n        this.setState({back : \"Drizzle\"});\n        break;\n      case rangeId >= 500 && rangeId <= 521:\n        this.setState({ icon: icons.Rain });\n        this.setState({back : \"Rain\"});\n        break;\n      case rangeId >= 600 && rangeId <= 622:\n        this.setState({ icon: icons.Snow });\n        this.setState({back : \"Snow\"});\n        break;\n      case rangeId >= 701 && rangeId <= 781:\n        this.setState({ icon: icons.Atmosphere });\n        this.setState({back : \"Atmosphere\"});\n        break;\n      case rangeId === 800:\n        this.setState({ icon: icons.Clear });\n        this.setState({back : \"Clear\"});\n        break;\n      case rangeId >= 801 && rangeId <= 804:\n        this.setState({ icon: icons.Clouds });\n        this.setState({back : \"Clouds\"});\n        break;\n      default:\n        this.setState({ icon: icons.Clouds });\n        this.setState({back : \"default\"});\n    }\n  }\n\n  calCelsius(temp) {\n    let cell = Math.floor(temp - 273.15);\n    return cell;\n  }\n\n  getWeather = async e => {\n    e.preventDefault();\n\n    const country = e.target.elements.country.value;\n    const city = e.target.elements.city.value;\n\n    const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_key}`);\n    const response = await api_call.json();\n\n    console.log(response);\n\n    this.setState({\n      city:response.name,\n      country: response.sys.country,\n      // main: response.weather[0].main,\n        celsius: this.calCelsius(response.main.temp),\n        temp_max: this.calCelsius(response.main.temp_max),\n        temp_min: this.calCelsius(response.main.temp_min),\n        description: response.weather[0].description,\n        wind_speed:response.wind.speed,\n        Humidity:response.main.humidity\n        // error: false\n    })\n\n    this.get_WeatherIcon(this.weatherIcon, response.weather[0].id);\n  };\n  \n\n  render() {\n         return(\n        <div className=\"App\">\n           <div className={this.state.back}>\n           <div className=\"title\">\n          <h1>Weather App</h1>\n          <small>find your place weather</small>\n          </div>\n     <Form showWeather={this.getWeather} />\n\n    {( this.state.city != null) ? (\n\n     <Weather \n     city={this.state.city}\n     celsius={this.state.celsius}\n     temp_max={this.state.temp_max}\n     temp_min={this.state.temp_min}\n     description={this.state.description}\n     weathericon={this.state.icon}\n     wind_speed={this.state.wind_speed}\n     humidity={this.state.Humidity}\n    \n    />) : ('')}\n    </div></div>\n    )\n \n  }\n};\n\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}